#pragma once
#include "SDK.h"

DWORD base = (DWORD)GetModuleHandle("RobloxPlayerBeta.exe");
DWORD Offset(int address) {
	return (address - 0x400000 + base);
}

namespace Addys {
	namespace SC {
		DWORD base = Offset(0x117EC24);
		int ptr() {
			return Memory::Scan(PAGE_READWRITE, (char*)&base, "xxxx");
		}
	}
	DWORD state = Offset(Memory::AOBScan("\x55\x8B\xEC\x56\x57\x6A\x05\xFF\x75\x08\x8B\xF9\x33\xF6\xE8\x00\x00\x00\x00", "xxxxxxxxxxxxxxx????"));
	DWORD getfield = Offset(Memory::AOBScan("\x55\x8B\xEC\x83\xEC\x10\x53\x56\x8B\x75\x08\x57\xFF\x75\x0C\x56\xE8\x00\x00\x00\x00\x8B\x55\x10\x8B\xCA\x83\xC4\x08\x8B\xF8\x8D\x59\x01\x8A\x01\x41\x84\xC0\x75\xF9\x2B\xCB\x51\x52\x56\xE8\x00\x00\x00\x00\xFF\x76\x10", "xxxxxxxxxxxxxxxxx????xxxxxxxxxxxxxxxxxxxxxxxxxx????xxx"));
	DWORD pushvalue = Offset(Memory::AOBScan("\x55\x8B\xEC\x56\xFF\x75\x0C\x8B\x75\x08\x56\xE8\x00\x00\x00\x00\x8B\x08", "xxxxxxxxxxxx????xx"));
	DWORD pcall = Offset(Memory::AOBScan("\x55\x8B\xEC\x8B\x45\x14\x83\xEC\x08", "xxxxxxxxx"));
	DWORD pushstring = Offset(Memory::AOBScan("\x55\x8B\xEC\x8B\x55\x0C\x85\xD2\x75\x0D", "xxxxxxxxxx"));
	DWORD settop = Offset(Memory::AOBScan("\x55\x8B\xEC\x8B\x4D\x0C\x8B\x55\x08\x85\xC9\x78\x35", "xxxxxxxxxxxxx"));
	DWORD setfield = Offset(Memory::AOBScan("\x55\x8B\xEC\x83\xEC\x10\x53\x56\x8B\x75\x08\x57\xFF\x75\x0C\x56\xE8\x00\x00\x00\x00\x8B\x55\x10\x8B\xCA\x83\xC4\x08\x8B\xF8\x8D\x59\x01\x8A\x01\x41\x84\xC0\x75\xF9\x2B\xCB\x51\x52\x56\xE8\x00\x00\x00\x00\x89\x45\xF0", "xxxxxxxxxxxxxxxxx????xxxxxxxxxxxxxxxxxxxxxxxxxx????xxx"));
	DWORD pushnumber = Offset(Memory::AOBScan("\x55\x8B\xEC\x8B\x55\x08\x66\x0F\x28\x0D", "xxxxxxxxxx"));
	DWORD setsoundid = Offset(0xDEADBEEF);
	DWORD touserdata = Offset(Memory::AOBScan("\x55\x8B\xEC\xFF\x75\x0C\xFF\x75\x08\xE8\x00\x00\x00\x00\x8B\x48\x08\x83\xC4\x08\x49\x68\x00\x00\x00\x00\x68\x00\x00\x00\x00\xFF\xD0\x83\xC4\x0C\x84\xC0\x75\x17\x8A\x15\x00\x00\x00\x00\x0F\xB6\xC2\x68\x00\x00\x00\x00\x50\xE8\x00\x00\x00\x00\x83\xC4\x08\x8D\x04\xF5", "xxxxxxxxxx????xxxxxxxx????x????xxxxxxxxxxx????xxxx????xx????xxxxxx"));
	DWORD tostring = Offset(Memory::AOBScan("\x55\x8B\xEC\x56\x8B\x75\x08\x57\xFF\x75\x0C\x56\xE8\x00\x00\x00\x00\x8B\xF8", "xxxxxxxxxxxxx????xx"));
	DWORD pushint = Offset(Memory::AOBScan("\x55\x8B\xEC\x66\x0F\x6E\x4D\x00\x8B\x55\x08", "xxxxxxx?xxx"));
	DWORD pushbool = Offset(Memory::AOBScan("\x55\x8B\xEC\x8B\x55\x08\x33\xC0\x39\x45\x0C", "xxxxxxxxxxx"));
	DWORD pushlit = Offset(Memory::AOBScan("\x55\x8B\xEC\x56\x8B\x75\x08\x57\xFF\x75\x0C\x56\xE8\x00\x00\x00\x00\x8B\xF8", "xxxxxxxxxxxxx????xx")); // matb
	//DWORD gettable = Offset(0x545CB0); // gay
	DWORD remove = Offset(0xDEADBEEF);
	DWORD insert = Offset(0xDEADBEEF);
	//DWORD settable = Offset(0x547700);
	DWORD pushclosure = Offset(Memory::AOBScan("\x55\x8B\xEC\x56\x8B\x75\x08\x8B\x4E\x08\x8B\x44\x31\x60", "xxxxxxxxxxxxxx"));
	DWORD tolstring = Offset(Memory::AOBScan("\x55\x8B\xEC\x56\x8B\x75\x08\x57\xFF\x75\x0C\x56\xE8\x00\x00\x00\x00\x8B\xF8", "xxxxxxxxxxxxx????xx"));
	DWORD gettop = Offset(Memory::AOBScan("\x55\x8B\xEC\x8B\x4D\x08\x8B\x41\x10\x2B\x41\x1C\xC1\xF8\x04", "xxxxxxxxxxxxxxx"));
	DWORD pushuserdata = Offset(Memory::AOBScan("\x55\x8B\xEC\x56\x8B\x75\x08\x57\x8B\x4E\x08\x8B\x44\x31\x60\x3B\x44\x31\x54\x72\x09\x56\xE8\x00\x00\x00\x00\x83\xC4\x04\x8B\x46\x0C", "xxxxxxxxxxxxxxxxxxxxxxx????xxxxxx"));
	DWORD setmetatable = Offset(Memory::AOBScan("\x55\x8B\xEC\x53\x56\x57\xFF\x75\x0C\x8B\x7D\x08\x57\xE8", "xxxxxxxxxxxxxx"));
	DWORD toboolean = Offset(Memory::AOBScan("\x55\x8B\xEC\xFF\x75\x0C\xFF\x75\x08\xE8\x00\x00\x00\x00\x8B\x48\x08\x83\xC4\x08\x85\xC9", "xxxxxxxxxx????xxxxxxxx"));
	//DWORD fgetval = Offset(0x4C2F60);
}
